@model EShop.Domain.Domain_Models.Product

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />

<style>
    .card-img-top {
        height: 300px;
        object-fit: contain;
        background-color: #f9f9f9;
        padding: 10px;
    }

    .card-title {
        font-size: 1.8rem;
        font-weight: bold;
        margin-bottom: 1rem;
    }

    .card-text {
        font-size: 1rem;
        margin-bottom: 0.5rem;
    }

    .action-buttons .btn {
        flex: 1;
        min-width: 100px;
        margin: 0 5px;
        font-weight: 500;
        transition: all 0.2s ease-in-out;
    }

        .action-buttons .btn:hover {
            transform: translateY(-2px);
        }

    .card-footer {
        display: flex;
        justify-content: space-between;
        gap: 10px;
        flex-wrap: wrap;
    }
</style>

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-lg border-0 rounded-4">
                <img src="@Model.ProductImage" class="card-img-top" alt="Product Image" />

                <div class="card-body text-center">
                    <h3 class="card-title">@Model.ProductName</h3>
                    <p class="card-text">@Model.ProductDescription</p>
                    <h5 class="card-text text-muted">Price: <strong>@Model.ProductPrice</strong> $</h5>
                    <p class="card-text">Rating: <strong>@Model.Rating</strong> ⭐</p>
                </div>

                <div class="card-footer action-buttons text-center">
                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        <a asp-controller="Products" asp-action="AddProductToCard" asp-route-id="@Model.Id" class="btn btn-info btn-sm">
                            <i class="fa-solid fa-cart-plus"></i> Add to Cart
                        </a>
                        <form method="post" action="@Url.Action("Add", "Wishlist")" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="productId" value="@Model.Id" />
                            <button type="submit" class="btn btn-outline-danger btn-sm">
                                <i class="fa-solid fa-heart"></i> Add to Wishlist
                            </button>
                        </form>
                    }
                    else
                    {
                        <a href="/Identity/Account/Login" class="btn btn-info btn-sm">
                            <i class="fa-solid fa-cart-plus"></i> Add to Cart
                        </a>
                        <a href="/Identity/Account/Login" class="btn btn-outline-danger btn-sm">
                            <i class="fa-solid fa-heart"></i> Add to Wishlist
                        </a>
                    }

                    <a asp-controller="Products" asp-action="Edit" asp-route-pid="@Model.Id" class="btn btn-secondary btn-sm">
                        <i class="fa-solid fa-pen-to-square"></i> Edit
                    </a>
                    <a asp-controller="Products" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger btn-sm">
                        <i class="fa-solid fa-trash"></i> Delete
                    </a>
                    <a asp-controller="Products" asp-action="Index" class="btn btn-light btn-sm">
                        <i class="fa-solid fa-arrow-left"></i> Back
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Handle wishlist form submission
    document.addEventListener('DOMContentLoaded', function() {
        const wishlistForm = document.querySelector('form[action*="Wishlist"]');
        if (wishlistForm) {
            wishlistForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const formData = new FormData(this);
                const button = this.querySelector('button[type="submit"]');
                const originalText = button.innerHTML;
                
                // Show loading state
                button.innerHTML = '<i class="fa-solid fa-spinner fa-spin"></i> Adding...';
                button.disabled = true;
                
                fetch(this.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]')?.value || ''
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        button.innerHTML = '<i class="fa-solid fa-check"></i> Added!';
                        button.classList.remove('btn-outline-danger');
                        button.classList.add('btn-success');
                        
                        // Show success message
                        showToast(data.message || 'Item added to wishlist!', 'success');
                        
                        // Reset button after 2 seconds
                        setTimeout(() => {
                            button.innerHTML = originalText;
                            button.classList.remove('btn-success');
                            button.classList.add('btn-outline-danger');
                            button.disabled = false;
                        }, 2000);
                    } else {
                        button.innerHTML = originalText;
                        button.disabled = false;
                        showToast(data.message || 'Error adding item to wishlist', 'error');
                    }
                })
                .catch(error => {
                    button.innerHTML = originalText;
                    button.disabled = false;
                    showToast('Error adding item to wishlist', 'error');
                    console.error('Error:', error);
                });
            });
        }
    });
    
    // Simple toast notification function
    function showToast(message, type) {
        const toast = document.createElement('div');
        toast.className = `alert alert-${type === 'success' ? 'success' : 'danger'} position-fixed`;
        toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
        toast.innerHTML = `
            <div class="d-flex align-items-center">
                <i class="fa-solid fa-${type === 'success' ? 'check-circle' : 'exclamation-triangle'} me-2"></i>
                ${message}
                <button type="button" class="btn-close ms-auto" aria-label="Close"></button>
            </div>
        `;
        
        document.body.appendChild(toast);
        
        // Auto remove after 3 seconds
        setTimeout(() => {
            toast.remove();
        }, 3000);
        
        // Allow manual close
        toast.querySelector('.btn-close').addEventListener('click', () => {
            toast.remove();
        });
    }
</script>
